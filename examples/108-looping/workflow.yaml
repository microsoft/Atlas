
operations:

- message: This is an example of counting from 0 to 9
- message: and building an `append` object to add to a `data` array

- message: (['Looping... Index is ', index])

  values: # count from 0 to 9 by 1
    index: 0
    data: []

  operations:
  - message: Nested work would go here
    output: 
      append: # append[] is added to data[] below
      - id: (index)
        formula: ( bits(index) | [].to_string(@) | join(' + ', @) )

  output: 
    data: ( [data, append] [] ) # combines array-of-arrays, then uses [] operator to flatten
    index: (sum( [index, `1`] )) # increment index

  repeat: # repeat until index is 10
    condition: (index < `10`)


- message: This is an example of looping through items in an array 
  
- message: (['Looping... Current is ', to_string(current)])
  values: 
    foreach: (data) # keep track of remaining data to iterate
    current: (data[0]) # and make the current item easy to access
  condition: ( length(foreach) > `0` ) # don't run if there's no data
  
  operations:
  - message: Nested work would go here

  output:
    current: (foreach[1]) # advance to the next data item
    foreach: (foreach[1:]) # reduce the remaining data to iterate
  repeat:
    condition: ( length(foreach) > `0` ) # stop when there is no remaining data
